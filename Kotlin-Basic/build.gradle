// refer to <https://kotlinlang.org/docs/gradle-compiler-options.html#target-the-jvm> for more details.
import org.jetbrains.kotlin.gradle.dsl.KotlinVersion
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

buildscript {
    ext {
        kotlin_version = '2.0.0'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    
    // https://kotlinlang.org/docs/reference/compiler-plugins.html
    id "org.jetbrains.kotlin.plugin.noarg" version "$kotlin_version"
    id "org.jetbrains.kotlin.plugin.jpa" version "$kotlin_version"
    id "org.jetbrains.kotlin.kapt" version "$kotlin_version"
    //id "org.jetbrains.kotlin.plugin.serialization" version "$kotlin_version"

    // https://github.com/Kotlin/kotlinx.atomicfu
    //id "org.jetbrains.kotlinx:atomicfu-gradle-plugin" version "$kotlin_version"
    
    //id 'com.google.devtools.ksp' version '2.0.0-1.0.21'
}

repositories {
    google()
    mavenCentral()
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/apache-snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    gradlePluginPortal()
}

group = "com.ztiany"
version = "1.0"

// https://kotlinlang.org/docs/reference/compiler-plugins.html
//apply plugin: "kotlin-noarg"
//apply plugin: "kotlin-allopen"
//apply plugin: 'kotlinx-serialization'
//apply plugin: 'kotlinx-atomicfu'

/*noArg {
    annotation("me.ztiany.noarg.NoArg")
    //default is true
    invokeInitializers = true
}*/

sourceSets {
    main.kotlin.srcDirs += [
            // kotlin 新特新
            "src/main/01-base",

            // kotlin 新特新
            "src/main/02-new",

            // gradle 工具
            "src/main/03-tools",

            // 协程
            "src/main/04-coroutines",

            // kotlin 扩展库、新范式的学习
            "src/main/05-extensions",

            // 慕课网教程示例代码
            "src/main/06-imooc"
    ]
}

dependencies {
    //================================================================================
    // test
    //================================================================================
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation 'io.kotest:kotest-runner-junit5:5.6.2'


    //================================================================================
    // Kotlin
    //================================================================================
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:${rootProject.kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    // kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0-RC"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.9.0-RC"

    // kotlin tools
    // https://github.com/Kotlin/kotlinx.serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-core:1.7.0'
    // https://github.com/Kotlin/kotlinx.atomicfu
    implementation 'org.jetbrains.kotlinx:atomicfu:0.24.0'


    //================================================================================
    // Kotlin/JVM: Metadata and Reflection
    //================================================================================
    // https://github.com/JetBrains/kotlin/tree/master/libraries/kotlinx-metadata/jvm
    implementation 'org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.9.0'
    // https://square.github.io/kotlinpoet/interop-kotlinx-metadata/
    implementation("com.squareup:kotlinpoet-metadata:1.17.0")
    // https://github.com/bennyhuo/kotlinp
    implementation("com.bennyhuo.kotlin:kotlinp:1.8.10")


    //================================================================================
    // RxJava
    //================================================================================
    // https://github.com/ReactiveX/RxKotlin
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'


    //================================================================================
    // network
    //================================================================================
    // retrofit with coroutine
    // https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:2.11.0"
    implementation "com.squareup.retrofit2:retrofit-mock:2.11.0"
    implementation "com.squareup.retrofit2:converter-gson:2.11.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.11.0"
    // https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    // okhttp
    // https://github.com/square/okhttp
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.squareup.okhttp3:mockwebserver:4.12.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
    // json
    implementation 'com.google.code.gson:gson:2.10.1'


    //================================================================================
    // bennyhuo
    //================================================================================
    //https://github.com/enbandari/PortableAndroidHandler
    implementation "com.bennyhuo:portable-android-handler:1.0"
    // https://github.com/enbandari/KotlinTuples
    //implementation "com.bennyhuo.kotlin:kotlin-tuples:2.0"
    // https://github.com/enbandari/ObjectPropertyDelegate
    //implementation "com.bennyhuo.kotlin:opd:1.0-rc-2"
    // https://github.com/enbandari/ReleasableVar
    //implementation "com.bennyhuo.kotlin:releasable-nonnull-vars:1.1.0"
    // https://github.com/enbandari/KotlinDeepCopy
    //implementation "com.bennyhuo.kotlin:deepcopy-reflect:1.0"
    //implementation "com.bennyhuo.kotlin:deepcopy-annotations:1.1.0"
    //kapt "com.bennyhuo.kotlin:deepcopy-compiler:1.1.0"


    //================================================================================
    // functional: arrow, mapstruct
    //================================================================================
    // arrow
    //implementation "io.arrow-kt:arrow-core:2.0.0-alpha.3"
    //implementation "io.arrow-kt:arrow-fx-coroutines:2.0.0-alpha.3"
    //implementation "io.arrow-kt:arrow-optics:2.0.0-alpha.3"
    //ksp "io.arrow-kt:arrow-optics-ksp-plugin:2.0.0-alpha.3"
    //implementation "io.arrow-kt:arrow-syntax:2.0.0-alpha.3"
    //kapt "io.arrow-kt:arrow-meta:2.0.0-alpha.3"

    // https://plugins.jetbrains.com/plugin/10036-mapstruct-support
    // https://github.com/mapstruct/mapstruct
    // https://mapstruct.org/news/2017-09-19-announcing-mapstruct-idea/
    //implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    //kapt 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

test {
    useJUnitPlatform()
}

kotlin {
    compilerOptions {
        apiVersion = KotlinVersion.KOTLIN_2_0
    }
}

tasks.named('compileKotlin', KotlinJvmCompile) {
    compilerOptions {
        freeCompilerArgs.add("-Xcontext-receivers")
    }
}

tasks.named('compileTestKotlin', KotlinJvmCompile) {
    compilerOptions {
        freeCompilerArgs.add("-Xcontext-receivers")
    }
}
